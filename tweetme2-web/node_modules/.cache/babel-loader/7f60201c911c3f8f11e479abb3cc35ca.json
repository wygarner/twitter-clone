{"ast":null,"code":"import _slicedToArray from \"/Users/wyattgarner/Dev/tweetme2/tweetme2-web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/wyattgarner/Dev/tweetme2/tweetme2-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { TweetCreate } from './create';\nimport { Tweet } from './detail';\nimport { apiTweetDetail } from './lookup';\nimport { FeedList } from './feed';\nimport { TweetsList } from './list';\nexport function FeedComponent(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        newTweets = _useState2[0],\n        setNewTweets = _useState2[1];\n\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleNewTweet = newTweet => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  return React.createElement(\"div\", {\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, canTweet === true && React.createElement(TweetCreate, {\n    didTweet: handleNewTweet,\n    className: \"col-12 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(FeedList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n}\nexport function TweetsComponent(props) {\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newTweets = _useState4[0],\n        setNewTweets = _useState4[1];\n\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleNewTweet = newTweet => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  return React.createElement(\"div\", {\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, canTweet === true && React.createElement(TweetCreate, {\n    didTweet: handleNewTweet,\n    className: \"col-12 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(TweetsList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n}\nexport function TweetDetailComponent(props) {\n  const tweetId = props.tweetId;\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        didLookup = _useState6[0],\n        setDidLookup = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        tweet = _useState8[0],\n        setTweet = _useState8[1];\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response);\n    } else {\n      alert(\"There was an error finding your tweet.\");\n    }\n  };\n\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [tweetId, didLookup, setDidLookup]);\n  return tweet === null ? null : React.createElement(Tweet, {\n    tweet: tweet,\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/wyattgarner/Dev/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","TweetCreate","Tweet","apiTweetDetail","FeedList","TweetsList","FeedComponent","props","newTweets","setNewTweets","canTweet","handleNewTweet","newTweet","tempNewTweets","unshift","className","TweetsComponent","TweetDetailComponent","tweetId","didLookup","setDidLookup","tweet","setTweet","handleBackendLookup","response","status","alert"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {TweetCreate} from './create'\nimport {Tweet} from './detail'\nimport {apiTweetDetail} from './lookup'\nimport {FeedList} from './feed'\nimport {TweetsList} from './list'\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) =>{\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <FeedList newTweets={newTweets} {...props} />\n  </div>\n}\n\nexport function TweetsComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) =>{\n      let tempNewTweets = [...newTweets]\n      tempNewTweets.unshift(newTweet)\n      setNewTweets(tempNewTweets)\n    }\n    return <div className={props.className}>\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n          <TweetsList newTweets={newTweets} {...props} />\n    </div>\n}\n\n\nexport function TweetDetailComponent(props){\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet.\")\n    }\n  }\n  useEffect(()=>{\n    if (didLookup === false){\n\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  }, [tweetId, didLookup, setDidLookup])\n\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n }"]},"metadata":{},"sourceType":"module"}