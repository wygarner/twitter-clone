{"ast":null,"code":"import _wrapRegExp from \"/Users/wyattgarner/Dev/tweetme2/tweetme2-web/node_modules/@babel/runtime/helpers/esm/wrapRegExp\";\nimport _slicedToArray from \"/Users/wyattgarner/Dev/tweetme2/tweetme2-web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/wyattgarner/Dev/tweetme2/tweetme2-web/src/tweets/detail.js\";\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\nimport { UserDisplay, UserPicture } from '../profiles';\nexport function ParentTweet(props) {\n  const tweet = props.tweet;\n  return tweet.parent ? React.createElement(Tweet, {\n    isRetweet: true,\n    retweeter: props.retweeter,\n    hideActions: true,\n    className: ' ',\n    tweet: tweet.parent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : null;\n}\nexport function Tweet(props) {\n  const tweet = props.tweet,\n        didRetweet = props.didRetweet,\n        hideActions = props.hideActions,\n        isRetweet = props.isRetweet,\n        retweeter = props.retweeter;\n\n  const _useState = useState(props.tweet ? props.tweet : null),\n        _useState2 = _slicedToArray(_useState, 2),\n        actionTweet = _useState2[0],\n        setActionTweet = _useState2[1];\n\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  className = isRetweet === true ? `${className} p-2 border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match(_wrapRegExp(/([0-9]+)/, {\n    tweetid: 1\n  }));\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = event => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, isRetweet === true && React.createElement(\"div\", {\n    className: \"mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"small text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Retweet via \", React.createElement(UserDisplay, {\n    user: retweeter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(UserPicture, {\n    user: tweet.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-11\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(UserDisplay, {\n    includeFullName: true,\n    user: tweet.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, tweet.content), React.createElement(ParentTweet, {\n    tweet: tweet,\n    retweeter: tweet.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"btn btn-group px-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, actionTweet && hideActions !== true && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), isDetail === true ? null : React.createElement(\"button\", {\n    className: \"btn btn-outline-primary btn-sm\",\n    onClick: handleLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"View\")))));\n}","map":{"version":3,"sources":["/Users/wyattgarner/Dev/tweetme2/tweetme2-web/src/tweets/detail.js"],"names":["React","useState","ActionBtn","UserDisplay","UserPicture","ParentTweet","props","tweet","parent","retweeter","Tweet","didRetweet","hideActions","isRetweet","actionTweet","setActionTweet","className","path","window","location","pathname","match","urlTweetId","groups","tweetid","isDetail","id","handleLink","event","preventDefault","href","handlePerformAction","newActionTweet","status","user","content","type","display"],"mappings":"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","sourcesContent":["\nimport React, {useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\n\nimport {\n  UserDisplay,\n  UserPicture\n} from '../profiles'\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n  }\n  export function Tweet(props) {\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\n      const path = window.location.pathname\n      const match = path.match(/(?<tweetid>\\d+)/)\n      const urlTweetId = match ? match.groups.tweetid : -1\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\n      \n      const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n      }\n      const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n          setActionTweet(newActionTweet)\n        } else if (status === 201) {\n          if (didRetweet){\n            didRetweet(newActionTweet)\n          }\n        }\n        \n      }\n      \n      return <div className={className}>\n         {isRetweet === true && <div className='mb-2'>\n          <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n        </div>}\n        <div className='d-flex'>\n       \n          <div className=''>\n            <UserPicture user={tweet.user} />\n          </div>\n          <div className='col-11'>\n              <div>\n             \n                <p>\n                  <UserDisplay includeFullName user={tweet.user} />\n                </p>\n                <p>{tweet.content}</p>\n               \n                <ParentTweet tweet={tweet} retweeter={tweet.user} />\n              </div>\n          <div className='btn btn-group px-0'>\n          {(actionTweet && hideActions !== true) && <React.Fragment>\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\n                </React.Fragment>\n          }\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n                </div>\n                </div>\n      </div>\n      </div>\n    }\n  "]},"metadata":{},"sourceType":"module"}