{"ast":null,"code":"var _jsxFileName = \"/Users/wyattgarner/Dev/tweetme2/tweetme2-web/src/profiles/components.js\";\nimport React from 'react';\nexport function UserLink(props) {\n  const username = props.username;\n\n  const handleUserLink = event => {\n    window.location.href = `/profiles/${username}`;\n  };\n\n  return React.createElement(\"span\", {\n    className: \"pointer\",\n    onClick: handleUserLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.children);\n}\nexport function UserDisplay(props) {\n  const user = props.user,\n        includeFullName = props.includeFullName,\n        hideLink = props.hideLink;\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, nameDisplay, hideLink === true ? `@${user.username}` : React.createElement(UserLink, {\n    username: user.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"@\", user.username));\n}\nexport function UserPicture(props) {\n  const user = props.user,\n        hideLink = props.hideLink;\n  const userIdSpan = React.createElement(\"span\", {\n    className: \"mx-1 px-3 py-2 rounded-circle bg-dark text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, user.username[0]);\n  return hideLink === true ? userIdSpan : React.createElement(UserLink, {\n    username: user.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, userIdSpan);\n}","map":{"version":3,"sources":["/Users/wyattgarner/Dev/tweetme2/tweetme2-web/src/profiles/components.js"],"names":["React","UserLink","props","username","handleUserLink","event","window","location","href","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","UserPicture","userIdSpan"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAAA,QACxBC,QADwB,GACZD,KADY,CACxBC,QADwB;;AAE/B,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAYL,QAAS,EAA5C;AACD,GAFD;;AAGA,SAAO;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFF,KAAK,CAACO,QADJ,CAAP;AAGD;AAGD,OAAQ,SAASC,WAAT,CAAqBR,KAArB,EAA2B;AAAA,QAC1BS,IAD0B,GACST,KADT,CAC1BS,IAD0B;AAAA,QACpBC,eADoB,GACSV,KADT,CACpBU,eADoB;AAAA,QACHC,QADG,GACSX,KADT,CACHW,QADG;AAEjC,QAAMC,WAAW,GAAGF,eAAe,KAAK,IAApB,GAA4B,GAAED,IAAI,CAACI,UAAW,IAAGJ,IAAI,CAACK,SAAU,GAAhE,GAAqE,IAAzF;AACA,SAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJF,WADI,EAEJD,QAAQ,KAAK,IAAb,GAAqB,IAAGF,IAAI,CAACR,QAAS,EAAtC,GAA0C,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEQ,IAAI,CAACR,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqCQ,IAAI,CAACR,QAA1C,CAFtC,CAAP;AAID;AAED,OAAQ,SAASc,WAAT,CAAsBf,KAAtB,EAA6B;AAAA,QAC5BS,IAD4B,GACVT,KADU,CAC5BS,IAD4B;AAAA,QACtBE,QADsB,GACVX,KADU,CACtBW,QADsB;AAEnC,QAAMK,UAAU,GAAG;AAAM,IAAA,SAAS,EAAC,kDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAClBP,IAAI,CAACR,QAAL,CAAc,CAAd,CADkB,CAAnB;AAGA,SAAQU,QAAQ,KAAK,IAAb,GAAoBK,UAApB,GAAiC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEP,IAAI,CAACR,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCe,UAApC,CAAzC;AACD","sourcesContent":["import React from 'react'\n\n\n\nexport function UserLink (props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href= `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n      {props.children}\n  </span>\n}\n\n\nexport  function UserDisplay(props){\n  const {user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n  return <React.Fragment>\n    {nameDisplay}\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n  </React.Fragment>\n}\n\nexport  function UserPicture (props) {\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n  {user.username[0]}\n</span>\n  return  hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}\n"]},"metadata":{},"sourceType":"module"}